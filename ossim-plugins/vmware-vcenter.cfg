# Alienvault plugin
# Author: Alienvault Team at plugins@alienvault.com
# Plugin vmware-vcenter id:1658 version: 0.0.8
# Last modification: 2017-09-12 12:30
#
# Plugin Selection Info:
# VMware:vCenter:-
#
# END-HEADER
# Accepted products:
# vmware - vcenter_converter -
# Description:
# 
#
#

[DEFAULT]
plugin_id=1658

[config]
enable=yes
type=detector

source=log
location=/var/log/vmware-vcenter.log

create_file=false

process=
start=no    ; launch plugin process when agent starts
stop=no     ; shutdown plugin process when agent stops
startup=
shutdown=

[translation]
Accepted=2
Failed=3
opened=4
closed=5
disconnected=6
dissociate=7
disabled=8
Synchronizing host=30
Invoke done=31
IPMI info=32
SSL Handshake failed=33
info=50
error=51
warning=52
#   version 6.6
VecsSrvWriteCertStringToDisk=55
ScanIndex=56
Modify Entry=57
VecsDeleteFileWithRetry=58
VecsFillVacantFileSlot=59
VecsSrvDeleteCertificate=60
PATH=63
CWD=64
Authenticated=68
Ping failed=69
USER_AUTH=70
USER_ACCT=71
CRED_ACQ=72 	
USER_START=73
USER_END=74
CRED_DISP=75
VMCACheckAccessKrb=76
READ operation=77
Added cert to VECS DB=78
VmDirSendLdapResult=79
succeeded=80
failed=81
Adding cert. Entry type=82
Bind Request Failed=83
User account control=84
Password Modification Successful=85
su=100
vmcad=101
audispd=102
vmafdd=103
vmdird=104
rsyslogd=105
auditd=106
chage=107
DEBUG=108
AddVirtualMachine=109
Failed to get vsi stat set=110
Calculated write I/O size=111
FetchUplinkDVPortgroups=112
Failed to read header on stream=113
Task Created=114
Task Completed=115
Invoke done=116
CollectDatastoreBasilStats=117
Event=118
Resolved endpoint=119
The client closed the stream=120
Connected to localhost=121
New proxy client=122
RecordOp ASSIGN=123
Responded to service state request=124
CloseSession called=125
GetOverrideFailureCount()=126
WaitForUpdatesDone=127
VpxaHalCnxHostagent::ProcessUpdate=128
VpxaHalServices=129
HostChanged=130
VpxaInvtVmChangeListener=131
VpxaHalVmHostagent=132
1+=134
1-=134
2+=135
2-=135
3+=136
3-=136
4+=137
4-=137
CommitChangesAndNotify=138
VpxLRO=139
ProxyManagedObjectImpl::DispatchAsync=140
VpxLroList::ForgetTask=141
VpxaMoService=142
VpxaStatsMetadata=143
VpxaHalCnxHostagent::DoCheckForUpdates=144
VpxaVmomi=145
VpxaTaskInfoPublisher::PropertyChanged=146
VpxaHalResourcePoolCurrentImpl::SetCachedRootResources=147
VpxaHostdSpecSync=148
ProcessResourceNotification=149
VpxaInvtHost=150
VpxaDatastore=151
VpxaHalDSHostagent:PropertyChanged=152
VpxaHalDSHostagent=153
UrlHelper::SetLocalIP=154
UrlHelper::SetDatastores=155
UrlHelper::SetNonDatastores=156
GetHostIormStatus=157
HandleHostdPropertyChange=158
ReArrangeLayoutEx=159
RemoveConnection=160
Url=161
VpxaDrs::GetDrsStatsManager=162
VpxaDrs::GetDrsStatsManagerMoRef=163
VpxaHalResourcePoolCurrentImpl::GetCachedRootResources=164
VpxaInvtVm_ScheduleVmSpaceRefresh=165
VpxaMoDvs::PrepareDvsChanges=166
VpxaMoVm::GetVmList=167
VpxaVmprovUtil=168
VpxaVmprovUtil::TranslateDatastoreMoref=169
Successfully acquired=175
#   6.0 events ( 52-57 )
ERROR = 176
BEGIN = 177
FINISH = 178
host-on = 179
host-off = 180
generating proposals = 181
LogActiveCapacity = 182
Drmdump written = 183
Closing Response = 184
Retrieved trusted STS certificate = 185
Authenticating to LS for stubAdapter = 186
Authenticating to LS old API for stubAdapter = 186
Authenticated to LS for stubAdapter = 186
Authenticated to LS old API for stubAdapter = 186
initial service state request failed, disabling pings = 187
Default resource used for extension description = 188
Default resource used for Solution Manager tab = 188
No message string to format = 189
Vmacore::Http::UnimplementedRequestHandler = 190
EventManagerProcessJobs = 191
Failed to read request = 192
Already authenticated to LS for stubAdapter = 186
ClientAdapterBase::InvokeOnSoap = 193
TaskLoop = 1999999999
InvtHostSyncLRO::StartWork = 1999999999
Local stats = 1999999999
InvokeWithOpId = 1999999999
SetDone = 1999999999
Failed to read header on stream = 194

WaitForUpdate = 195
CheckTokenValidity = 196
ComputeCompatibilitySet = 197
CreateServiceContent = 198
FindPersonUser = 199
FindSolutionUser = 1999999999
RefreshInventoryView = 201
Login = 202
RefreshSsoToken = 203
ScaHealthPollManager::AcquireTokenAuthenticateAsSolutionUser = 204
ScaHealthPollManager::InitSslContext = 205
UserDirectorySso = 206
VpxLRO = 1999999999
VpxVmomi = 208
VpxdHostSync = 209
VpxdIntHost = 210
PatchConfig = 211
Added cert to VECS DB = 213
Adding cert = 214
VecsDeleteFileWithRetry: = 215
VecsFillVacantFileSlot: = 216
VecsSrvDeleteCertificate: = 217
VecsSrvWriteCertStringToDisk: = 218
VmAfSrvGetDomainName succeeded = 219
VmAfdFindCertInArray failed = 220
VmAfdFindFileIndex failed = 221
requested READ = 222
remove rule = 223
Compiled/running with OpenSSL = 224
Configuration successful = 225
FIPS mode is disabled = 226
Init complete, = 227
Reading configuration = 228
Started dispatcher: = 229
The audit daemon is exiting. = 230
Threading = 231
af_unix plugin initialized = 232
audispd initialized = 233
can't get program name = 234
can't read sid = 235
password aging information displayed = 236
rsyslogd was HUPed = 237
stunnel = 238
utils.format.string_to_doc exception = 239
VmAfdAllocateNameFromContextImpl failed = 1999999999
VmAfdAllocateNameFromContext failed = 1999999999
audit_printk_skb: = 240
Unregistered protocol family = 241
Registered protocol family = 242

App = 100001
vpxd-profiler = 100002
vpxd = 1999999999
Drm = 100004
UpdateCompatSet = 100005
ProcessTaskResult = 100006
SaveGuestToDb = 100007
GetSummary = 100008
HandleAsyncQueryPerfResultsDoFinally = 100009
ProcessPortgroupListFromHostInt = 100010
GetDBSpaceStatus = 100011
FindAllParentGroups = 100012
GetDomains = 100013
SSO = 100014
ReInvokeWithNewSession = 100015
SpecSync = 100016
RolloverStats = 100017
Reconfigure = 100018
VpxdVmprovUtil = 100019
VpxdVmprovXaction = 100020
VdbStatement = 100021
AcquireTokenAuthenticateAsSolutionUser = 100022
InitSslContext = 100023
NotifyDeviceModelChanges = 100024
FindSolutionUser = 100025
NotifyChange = 100026
Not persisting vFlash resource runtime info = 100027
Response from host = 100028
level = 100003
PBMCallback = 100003
VpxdInvtHost = 100003
VpxdInvtVm::ProcessVmChanges = 100003
Backtrace = 100003
FileDeletionRetry = 100029
Got request for vm screenshot = 100030
Successfully completed request for vm screenshot = 100031
Unexpected exception = 100032
Method = 100033
Unexpected error reading SOAP request = 100034
_configInfo = 100003
_configSpec = 100003
StatsProfile = 100003
VpxdInvtVm::ProcessVmInfo = 100003
InvtSpecSyncLRO::StartWork = 100003
VpxdDatastore::ProcessChangeInfo = 100003

_DEFAULT_ = 20000000


##########################
#   MULTILINE RULES      #
##########################
[0001 - VMWare Vcenter - args]
event_type=event
#precheck="Arg version"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd:\s*(?P<severity>info|warning|verbose|error)\s*hostd\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<opid>\S+)\s*user=(?P<username>\S+)]\s*Arg version:\n.*-->\s"(?P<arg_version>\d+)"\n.*Arg\s*options:\n.*{\n.*=\s*(?P<max_wait_seconds>\d+),\n.*=\s(?P<max_obj_updates>\d+)\n.*--> }"
date={normalize_date($date)}
plugin_sid=170
device={$device}
src_ip={$device}
username={$username}
userdata1={$max_wait_seconds}
userdata2={$max_obj_updates}
userdata3={$arg_version}

[0002 - VMWare Vcenter - post event]
event_type=event
#precheck="Post event"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd:\s*info\s*hostd\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*VmkVprobSource::Post event.*{\n.*key = (?P<key>\d+),\n.*chainId = (?P<chain_id>\d+),\n.*createdTime = "(?P<created_time>[^"]*)",\n.*userName = "(?P<username>[^"]*)",\n.*datacenter = (?P<data_center>[^,]*),\n.*computeResource = (?P<computerResource>[^,]*),\n.*\n.*name = "(?P<name>[^"]*)",\n.*host = '(?P<host_name>[^']*)'\n.*\n.*vm = (?P<vm>[^,]*),\n.*ds = (?P<ds>[^,]*),\n.*net = (?P<net>[^,]*),\n.*dvs = (?P<dvs>[^,]*),\n.*\n.*\n.*eventTypeId = "(?P<ev_type_id>[^"]*)",\n.*severity = (?P<severity>[^,]*),\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*\n.*objectId = "(?P<obj_id>[^"]*)",\n.*objectType = "(?P<obj_type>[^"]*)",\n.*objectName = (?P<obj_name>[^,]*),\n.*fault = (?P<fault>.*)\n.*"
date={normalize_date($date)}
plugin_sid=171
device={$device}
src_ip={$device}
username={$username}
userdata1={$key}
userdata2={$name}
userdata3={$obj_name}
userdata4={$fault}
userdata5={$data_center}
userdata6={$created_time}
userdata7={$ev_type_id}
userdata8={$severity}
userdata9={$computerResource}

[0003 - VMWare Vcenter - req_canceled]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd:\s*(?P<severity>info|warning|verbose|error)\s*hostd\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<opid>\S+)\s*user=(?P<username>\S+)]\s*Result:\n.*{\n.*faultCause\s=\s(?P<fault_cause>.*),\n.*msg = "(?P<msg>[^"]*)"\n.*}"
date={normalize_date($date)}
plugin_sid=172
device={$device}
src_ip={$device}
username={$username}
userdata1={$opid}
userdata2={$sub}
userdata3={$hostd}
userdata4={$severity}
userdata5={$fault_cause}
userdata6={$msg}

[0004 - VMWare Vcenter - runtime info]
event_type=event
#precheck="GetRuntimeInfo"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd:\s*(?P<severity>info|warning|verbose|error)\s*hostd\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<opid>\S+)\s*]\s*VsanSystemVmkProvider\s*:\s*\S+\s*(?P<runtime_info>\S+),.*\n.*accessGenNo\s=\s(?P<accessed_gen_number>\d+),\n.*}"
date={normalize_date($date)}
plugin_sid=173
device={$device}
src_ip={$device}
userdata1={$hostd}
userdata2={$sub}
userdata3={$opid}
userdata4={$runtime_info}
userdata5={$accessed_gen_number}

[0005 - VMWare Vcenter - probe]
event_type=event
#precheck="Section for VMware"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*hostd-probe:\s*Section for VMware ESX.*\n.*(?P<severity>info|warning|verbose|error)\s*hostd-probe\[(?P<hostd_probe>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)]\s*.*\n.*fast path:\s*(?P<fast_path>true|false)\n.*\n.*\n.*directory:\s(?P<working_dir>\S+)\n.*Syscommand enabled:\s(?P<sys_enabled>true|false)\n.*"
date={normalize_date($date)}
plugin_sid=174
device={$device}
src_ip={$device}
filename={$working_dir}
userdata1={$hostd_probe}
userdata2={$sub}
userdata3={$fast_path}
userdata4={$sys_enabled}

[0006 - VMware Vcenter - task error]
event_type=event
#precheck=""
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*(?:opID=(?P<op_id>[^\]]*))?\]\s\[\S+\]\s*--\s*ERROR\s.*?--\s*\S+\s*--\s*(?P<function>\S+):\s*(?P<error>\S+):\n[^>]*>\sResult:\n.*\n[^=]*=\s*(?P<fault>.*),\s*\n[^"]*"(?P<filename>[^"]*)",\n[^<]*.*?TCP:(?P<dst>[^:]*):(?P<dst_port>\d+).*\n.*\n.*\n.*\n.*\n.*\n[^']*'(?P<snapshot>[^']*)'\n.*\n[^>]*>\s(?P<dvc_key>\d+)\n.*\n.*\n.*\n.*"
date={normalize_date($syslog_date)}
plugin_sid=176
device={$device}
src_ip={$device}
dst_ip={$dst}
dst_port={$dst_port}
filename={$filename}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$function}
userdata5={$error}
userdata6={$fault}
userdata7={$snapshot}
userdata8={$dvc_key}

[0007 - VMware Vcenter - Kernel with operation]
event_type=event
#precheck=""
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+)\s+kernel[^]]+\]\s+type=(?P<type>\S+)\saudit\([^)]+\):\sauid=(?P<auid>\d+)\sses=(?P<ses>\S+)\sop="(?P<operation>[^"]+)"\skey=(?P<key>\S+)\slist=(?P<list>\S+)\sres=(?P<res>\S+)"
date={normalize_date($date)}
plugin_sid={translate($operation)}
device={$source_ip}
src_ip={$source_ip}
userdata1={$type}
userdata2={$auid}
userdata3={$ses}
userdata4={$key}
userdata5={$list}
userdata6={$res}

##########################
#   SINGLE LINE RULES    #
##########################
[0010 - VMware Vcenter - Virtual machine start]
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\S+)\s+(?P<service>\w+)(\[\d+\])?:\s+(?P<msg>START):\s+(?P<process>.*?)\s+pid=(?P<pid>\d+)\s+from=(?P<sip_body>\d+.\d+.\d+.\d+)"
event_type=event
plugin_sid=1
device={$sip}
src_ip={$sip_body}
date={normalize_date($date)}
userdata1={$msg}
userdata2={$service}
userdata3={$process}
userdata4={$pid}

[0011 - VMware Vcenter - Authentication]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\S+)\s+(?P<service>\w+)(\[\d+\])?:\s+(?P<msg>(?P<sid>Accepted|Failed).*?)\sfor\s(?P<user>.*?)\sfrom\s(?P<sip_body>.*?)\s+port\s+(?P<sport>\d+)\s"
plugin_sid={translate($sid)}
device={$sip}
src_ip={$sip_body}
src_port={$sport}
date={normalize_date($date)}
username={$user}
userdata1={$msg}
userdata2={$service}

[0012 - VMware Vcenter - Authentication failure]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\S+)\s+(?P<service>\w+)(\[\d+\])?:\s+pam_unix.*?:\s+(?P<msg>.*?);.*?rhost=(?P<sip_body>.*?)\s+user=(?P<user>\w+)"
plugin_sid=3
device={$sip}
src_ip={$sip_body}
date={normalize_date($date)}
username={$user}
userdata1={$service}
userdata2={$msg}

[0013 - VMware Vcenter - Session]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\S+)\s+(?P<service>\w+)(\[\d+\])?:\s.*?:\s+(?P<msg>session\s(?P<sid>opened|closed))\s+.*?user\s+(?P<user>\w+).*"
plugin_sid={translate($sid)}
src_ip={$sip}
device={$sip}
date={normalize_date($date)}
username={$user}
userdata1={$service}
userdata2={$msg}

[0014 - VMware Vcenter - Virtual machine disconnected]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\S+)\s+(?P<service>\w+)(\[\d+\])?:\s+.*?cpu.*?Net.*?\d+:\s(?P<sid>\w+)\s"
plugin_sid={translate($sid)}
src_ip={$sip}
device={$sip}
date={normalize_date($date)}
userdata1={$service}

[0015 - VMWare Vcenter rule]
event_type=event
precheck="vmkernel"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+)\s+vmkernel:\s+cpu\d+:\d+\)(?P<device>\w+):\s+\S+\s+(?P<message>.*?on path\s"(?P<path>[^"]*)".*|.*)"
plugin_sid=10
date={normalize_date($date)}
device={$source_ip}
src_ip={$source_ip}
filename={$path}
userdata1={$message}
userdata2={$device}

[0016 - VCenter 6.0 IPfilter dropped]
event_type=event
precheck="IPfilter Dropped"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+).*?IPfilter Dropped\:\s+IN=(?P<in_iface>\S+).*?(?:mac|MAC)=(?P<mac>\S+)\s+SRC=(?P<src>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+DST=(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}).*?TTL=(?P<ttl>\d+)\s+ID=(?P<id>\d+)\s+(?:\S+\s)?PROTO=(?P<protocol>\S+)\s+(?:SPT=(?P<src_port>\d+)\s+DPT=(?P<dst_port>\d+))?"
plugin_sid=62
date={normalize_date($date)}
device={$device}
src_ip={$src}
dst_ip={$dst_ip}
src_port={$src_port}
dst_port={$dst_port}
protocol={$protocol}
userdata1={$in_iface}
userdata2={$mac}
userdata3={$ttl}
userdata4={$id}

[0017 - VMWare Vcenter - hostd]
event_type=event
precheck="ostd"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd(?:-probe)?:\s*(?P<severity>info|warning|verbose|error|quiet)\s*hostd(?:-probe)?\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)(?:\s*opID=(?P<opid>\S+)\s*)?(?:user=(?P<username>[^\]:]*)[^\]]*)?](?:\s*Activation\s*\[\S+]\s*:\s*)?\s*(?P<sid>AddVirtualMachine|Failed to get vsi stat set|Calculated write I/O size|FetchUplinkDVPortgroups|Failed to read header on stream|Task Created|Task Completed|Invoke done|CollectDatastoreBasilStats|Event|Successfully acquired)[\s:]*(?:VM\s*'(?P<vm_id>\d+)'\s*.*|Sysinfo.*?status\s*:\s*(?P<status>[^\.]*)\..*|added\s(?P<items>\d+)\s*items|Appended uplinkPg for dvs\s*(?P<dvs>.*?)\sportgroup\s*(?P<portgroup>\S+)|Basil write workload parameters for '(?P<id>[^']*)'.*|\[(?P<invoke>\S+)] on \[(?P<invoke_on>\S+)]|(?P<size>\d+) for (?P<io_size>\S+).*?--\s*(?P<params>.*)|<(?P<stream>.*?)>:\s*(?P<exception>.*)|\d+\s:\s(?P<event>.*)|\shardware: (?P<hardware>.*)|(?P<task>\S+)(?:\sStatus\s*(?P<resolution>success|failure))?)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
username={$username}
userdata1={$portgroup}
userdata2={$invoke}
userdata3={$hardware}
userdata4={$dvs}
userdata5={$items}
userdata6={$event}
userdata7={$params}
userdata8={$exception}
userdata9={$task}

[0018 - VMWare Vcenter - vpxa]
event_type=event
precheck="Vpxa:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Vpxa:\s*(?P<severity>info|warning|verbose|error)\s*vpxa\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)(?:\s*opID=(?P<opid>\S+)\s*)?(?:user=(?P<username>\S+))?]\s*\[(?P<action>\S+)]\s*(?P<msg>(?:(Resolved localPath\s|DsPathToLocalPath.*?->\s)(?P<filename>\S+))?(?:(?:Connection removed|localip).*?(?:(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?P<dst_port>\d+).*?TCP ')?(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?::(?P<src_port>\d+)'>>.*)?|.*))"
date={normalize_date($date)}
plugin_sid={translate($action)}
device={$device}
src_ip={$src_ip}
dst_ip={$dst_ip}
src_port={$src_port}
dst_port={$dst_port}
username={$username}
filename={$filename}
userdata1={$opid}
userdata2={$action}
userdata3={$hostd}
userdata4={$sub}

[0019 - VMWare Vcenter - internal stats]
event_type=event
precheck="Vpxa:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Vpxa:\s*(?P<severity>info|warning|verbose|error)\s*vpxa\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)(?:\s*opID=(?P<opid>\S+)\s*)?(?:user=(?P<username>\S+))?]\s*(?P<msg>Set internal stats for VM:\s*(?P<vpxa_id>\d+).*?,\s*(?P<vpxd_id>\d+).*?\?\s*(?P<ft_primary>false|true))"
date={normalize_date($date)}
plugin_sid=108
device={$device}
src_ip={$device}
username={$username}
userdata1={$ft_primary}
userdata2={$vpxa_id}
userdata3={$hostd}
userdata4={$sub}
userdata5={$opid}
userdata6={$vpxd_id}

[0020 - VMWare Vcenter - vobd]
event_type=event
precheck="vobd:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*vobd:\s*\[(?P<vobd>\w+)]\s*\S+\s\[(?P<event>\S+)]\s*(?P<msg>.*)"
date={normalize_date($date)}
plugin_sid=109
device={$device}
src_ip={$device}
userdata1={$msg}
userdata2={$event}
userdata3={$vobd}

[0021 - VMWare Vcenter - rhttpproxy]
event_type=event
precheck="Rhttpproxy:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Rhttpproxy:\s*(?P<severity>info|warning|verbose|error)\s*rhttpproxy\[(?P<rhttpproxy>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*Req\s(?P<req>\d+)]\s*(?P<sid>Resolved endpoint|The client closed the stream|Connected to localhost|New proxy client)\s*:?\s*(?:\[(?P<process>[^:]*):(?P<hex_id>\w+)]\s*_serverNamespace\s=\s(?P<server_namespace>\S+)\s*_isRedirect\s*=\s*(?P<redirect_status>true|false)\s*_port\s=\s)?(?:(?:\d+ over )?<.*?TCP\s'(?P<dst_ip>[^:]*):(?P<dst_port>\d+).*?TCP\s'(?P<src_ip>[^:]*):)?(?P<src_port>\d+)?"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$src_ip}
dst_ip={$dst_ip}
src_port={$src_port}
dst_port={$dst_port}
userdata1={$rhttpproxy}
userdata2={$sub}
userdata3={$process}
userdata4={$hex_id}
userdata5={$server_namespace}
userdata6={$redirect_status}

[0022 - VMWare Vcenter - vpxa no session]
event_type=event
precheck="Vpxa:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Vpxa:\s*(?P<severity>info|warning|verbose|error)\s*vpxa\[(?P<hostd>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)(?:\s*opID=(?P<opid>\S+)\s*)?(?:user=(?P<username>\S+))?]\s*(?P<sid>RecordOp ASSIGN|Responded to service state request|CloseSession called|GetOverrideFailureCount\(\))(?::\s*info\.(?P<action>\w+),\s*session\[(?P<session>\S+)](?P<hash>\S+)\.)?(?:\s*for session id=(?P<session_id>\S+)|\s*=\s*\S+\s*=\s*(?P<override_failures>\d+))?"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
username={$username}
userdata1={$action}
userdata2={$session}
userdata3={$sub}
userdata4={$hash}
userdata5={$opid}
userdata6={$session_id}

[0023 - VMWare Vcenter - file not found]
event_type=event
precheck="ERROR_FILE_NOT_FOUND"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Hostd:\s*\S+\sQueryInformation.*?ERROR_FILE_NOT_FOUND"
date={normalize_date($date)}
plugin_sid=110
device={$device}
src_ip={$device}

[0024 - VMWare Vcenter - fdm]
event_type=event
precheck="Fdm:"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s*Fdm:\s*(?P<severity>info|warning|verbose|error)\s*fdm\[(?P<fdm>\w+)]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<opid>\S+)]\s*\[(?P<class>[^\]]*)]\s*(?:hostId=(?P<host_id>\S+)\s*state=(?P<state>\S+)\smaster=(?P<host_master>\S+)\s*isolated=(?P<isolated>true|false)\s*|Unset\s(?P<unset>\S+).*?\((?P<path>\S+)\))?.*"
date={normalize_date($date)}
plugin_sid=133
device={$device}
src_ip={$device}
filename={$path}
userdata1={$sub}
userdata2={$class}
userdata3={$opid}
userdata4={$isolated}
userdata5={$fdm}
userdata6={$state}
userdata7={$host_master}
userdata8={$host_id}
userdata9={$unset}

[0025 - VCenter 5.5 Authenticate]
event_type=event
precheck="Authenticate"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+\[(?P<process>[^\]]*)\]\s*(?P<msg>Authenticate\((?P<user>[^,]*).*)"
plugin_sid=11
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$user}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0026 - VCenter 5.5 Authentication successful]
event_type=event
precheck="authenticated successfully"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?P<msg>User\s+(?P<user>.*?)\s+authenticated\s+successfully)"
plugin_sid=2
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$user}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata5={$msg}

[0027 - VCenter 5.5 Authentication failed]
event_type=event
precheck="Failed to authenticate"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?P<msg>Failed\s+to\s+authenticate\s+user\s+(?P<user>.*))"
plugin_sid=3
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$user}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata5={$msg}

[0028 - VCenter 5.5 User authenticated]
event_type=event
precheck="[Auth]"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+\[(?P<process>[^\]]*)\]:\s*(?P<msg>User\s+(?P<user>.*))"
plugin_sid=2
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$user}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0029 - VCenter 5.5 Synchronizing host]
event_type=event
precheck="Synchronizing host"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?:\[(?P<process>[^\]]*)\])?:?\s*(?P<msg>(?P<sid>Synchronizing\shost):\s+(?P<host>\S+)\s+\((?P<hostname>[^,]*),\s+(?P<host_ip>[^\)]*))"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
dst_ip={$host_ip}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}
userdata6={$host}
userdata7={$hostname}

[0030 - VCenter 5.5 Invoke done]
event_type=event
precheck="Invoke done"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?:\[(?P<process>[^\]]*)\])?:?\s*(?P<msg>(?P<sid>Invoke\sdone)\s+\((?P<hostname>[^,]*).*)"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
dst_ip={$hostname}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0031 - VCenter 5.5 IPMI not set]
event_type=event
precheck="IPMI info"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?:\[(?P<process>[^\]]*)\])?:?\s*(?P<msg>(?P<sid>IPMI\s+info)\s+of\s+host\s+(?P<hostname>\S+).*)"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
dst_ip={$hostname}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0032 - VCenter 5.5 SSL handshake failed]
event_type=event
precheck="SSL Handshake failed"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?\]\s+(?:\[(?P<process>[^\]]*)\])?:?\s*(?P<msg>(?P<sid>SSL\s+handshake\s+failed).*?local=(?P<dst_ip>[^:]*):(?P<dst_port>\d+),\s+peer=(?P<src_ip>[^:]*):(?P<src_port>\d+).*)"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$src_ip}
src_port={$src_port}
dst_ip={$dst_ip}
dst_port={$dst_port}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0040 - VMWare Vcenter - kernel Generic]
event_type=event
precheck="kernel"
regexp=(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+)\s+(vm)?kernel:?\s+(?P<message>[\S\t .]+)
plugin_sid=1999999999
date={normalize_date($date)}
device={$source_ip}
src_ip={$source_ip}
userdata1={$message}

[0041 - VCenter 6.0 vmdir ]
event_type=event
precheck="vmdird"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s+vmdird\s+\-.*?\:\s+(?P<sid>[^\(|\-]*)\s+(?:.*?(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\:(?P<dst_port>\d+)\<\-(?P<src_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\:(?P<src_port>\d+))?.*?cn=(?P<cn>[^,]+)\,(?:.*?Method:\s+(?P<method>\d+))?"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$src_ip}
dst_ip={$dst_ip}
src_port={$src_port}
dst_port={$dst_port}
userdata1={$cn}
userdata2={$method}

[0042 - VCenter 6.0 type config_change]
event_type=event
precheck="CONFIG_CHANGE"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+\S+\s+\-\s+node=(?P<node>\S+)\s+type=(?P<type>CONFIG_CHANGE).*?auid=(?P<auid>\d+)\s+ses=(?P<ses>\d+)\s+op="(?P<op>[^"]*)"\s+key=(?P<key>\S+)\s+list=(?P<list>\d+)\s+res=(?P<res>\d+)"
plugin_sid=61
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$node}
userdata2={$auid}
userdata3={$ses}
userdata4={$op}
userdata5={$key}
userdata6={$list}
userdata7={$res}

[0043 - VCenter 6.0 audit messages]
event_type=event
precheck="msg=audit"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+\S+\s+\-\s+node=(?P<node>\S+)\s+type=(?P<type>\S+).*?user pid=(?P<user_pid>\d+)\s+uid=(?P<uid>\d+)\s+auid=(?P<auid>\d+)\s+ses=(?P<ses>\d+).*?op=(?P<op>\S+)\s+acct="(?P<acct>[^"]*)"\s+exe="(?P<exe>[^"]*)""
plugin_sid={translate($type)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$node}
userdata2={$user_pid}
userdata3={$uid}
userdata4={$auid}
userdata5={$ses}
userdata6={$op}
userdata7={$acct}
userdata8={$exe}

[0044 - VCenter 6.0 syscall]
event_type=event
precheck="SYSCALL"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+\S+\s+\-\s+node=(?P<node>\S+)\s+type=(?P<type>SYSCALL).*?arch=(?P<arch>\S+)\s+syscall=(?P<syscall>\d+)\s+success=(?P<success>\S+)\s+exit=(?P<exit>\S+)(?:.*?comm="(?P<comm>[^"]*)"\s+exe="(?P<exe>[^"]*)"\s+key=(?P<key>\S+))?"
plugin_sid=65
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$arch}
userdata2={$syscall}
userdata3={$success}
userdata4={$exit}
userdata5={$comm}
userdata6={$exe}
userdata7={$key}

[0045 - VCenter 6.0 login messages]
event_type=event
precheck="LOGIN"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+\S+\s+\-\s+node=(?P<node>\S+)\s+type=(?P<type>\S+).*?login\s+pid=(?P<login_pid>\d+)\s+uid=(?P<uid>\d+)\s+old auid=(?P<old_auid>\d+)\s+new\s+auid=(?P<new_auid>\d+)\s+old\s+ses=(?P<old_ses>\d+)\s+new\s+ses=(?P<new_ses>\d+)"
plugin_sid=66
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$login_pid}
userdata2={$uid}
userdata3={$old_auid}
userdata4={$new_auid}
userdata5={$old_ses}
userdata6={$new_ses}

[0046 - VCenter 6.0 path cwd]
event_type=event
precheck="msg=audit"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s+\S+\s+\-\s+node=(?P<node>\S+)\s+type=(?P<type>PATH|CWD).*?\"(?P<data>[^"]*)"(\s+inode=(?P<inode>\d+)\s+dev=(?P<dev>\S+)\s+mode=(?P<mode>\d+)\s+ouid=(?P<ouid>\d+)\s+ogid=(?P<ogid>\d+)\s+rdev=(?P<rdev>\S+))?"
plugin_sid={translate($type)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$data}
userdata2={$inode}
userdata3={$dev}
userdata4={$mode}
userdata5={$ouid}
userdata6={$ogid}
userdata7={$rdev}

[0047 - VCenter 6.0 sshd]
event_type=event
precheck="sshd"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+).*?sshd.*?\-\s+(?P<msg>.*?)\s+(?:from|by)\s+(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"
plugin_sid=86
date={normalize_date($date)}
device={$source_ip}
src_ip={$source_ip}
dst_ip={$dst_ip}
userdata1={$msg}

[0048 - Vcenter 6.0 CMD]
event_type=event
precheck="CMD"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+).*?\-\s+\(?(?P<user>[^\)]+)\)?\s+CMD\s*\((?P<command>[^\)]+)\)"
plugin_sid=67
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$user}
userdata1={$command}

[0049 - VCenter 6.0 vmafdd GENERIC]
event_type=event
precheck="vmafdd"
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+).*?\-\s+\S+\s+(?:User (?P<username>\S+)\s+)?\S+\s+(?P<sid>READ operation|failed|succeeded)"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
username={$username}

[0050 - VCenter 6.0 auth_user or ping_failed]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+).*?(?P<sid>Authenticated|Ping failed).*?(?P<dst_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})(?:\@(?P<domain>\S+)|\,\s+port:\s+(?P<port>\d+))?"
plugin_sid={translate($sid)}
date={normalize_date($date)}
device={$source_ip}
src_ip={$source_ip}
dst_ip={$dst_ip}
dst_port={$port}
userdata1={$domain}

[0051 - VCenter 5.5 message]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s(?:\d{4}\s)?\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s[^\[]+\[\S+\s+(?P<level>\S+)\s+'(?P<object>[^']*)'(?:\s+opID=(?P<opid>\S+))?[^\]]*\]\s+(?:\[(?P<process>[^\]]*)\])?:?\s*(?P<msg>.*)"
plugin_sid={translate($level)}
date={normalize_date($date)}
device={$device}
src_ip={$device}
userdata1={$level}
userdata2={$object}
userdata3={$opid}
userdata4={$process}
userdata5={$msg}

[0052 - VMware Vcenter - 6.0 - task begin/finish]
event_type=event
precheck="task"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<op_id>[^\]]*)\]\s\[\S+\]\s*--\s*(?P<sid>BEGIN|FINISH) task(?:-internal)?-(?P<task_id>\d+)\s*(?:(?:--\s*session\[(?P<session>[^\]]*)\]\S+|--\s*(?P<task_parent>\S+))\s*--\s*(?P<task_name>\S+))?"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$session}
userdata5={$task_parent}
userdata6={$task_name}
userdata7={normalize_date($date2)}

[0053 - VMware Vcenter - 6.0 - task error]
event_type=event
precheck="task"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<op_id>[^\]]*)\]\s\[\S+\]\s*--\s*(?P<sid>ERROR) task(?:-internal)?-(?P<task_id>\d+)\s*(?:(?:--\s*session\[(?P<session>[^\]]*)\]\S+|--\s*(?P<task_parent>\S+))\s*--\s*(?P<task_name>\S+))?"
date={normalize_date($syslog_date)}
plugin_sid=176
device={$device}
src_ip={$device}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$task_id}
userdata5={$session}
userdata6={$task_parent}
userdata7={$task_name}
userdata8={normalize_date($date2)}

[0054 - VMware Vcenter - 6.0 - failed to read request]
event_type=event
precheck="Failed to read request"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+(?:\s*\S+.\S+)?)\]\s*Failed to read request;\s*stream:\s*(?P<stream>.*?(?:TCP.*?:(?P<src_port>\d+)'.*?TCP.*?:(?P<dst_port>\d+))?'>>(\)>)?),\s*error:\s*class\s*(?P<class>[^\(]*)\((?P<msg_error>[^)]*)\)"
date={normalize_date($syslog_date)}
plugin_sid=177
device={$device}
src_ip={$device}
src_port={$src_port}
dst_port={$dst_port}
userdata1={$severity}
userdata2={$sub}
userdata3={$class}
userdata4={$msg_error}
userdata5={normalize_date($date2)}


[0055 - VMware Vcenter - 6.0 - session begin/finish]
event_type=event
precheck="session"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<op_id>[^\]]*)\]\s\[\S+\]\s*--\s*(?P<sid>BEGIN|FINISH) task(?:-internal)?-(?P<task_id>\d+)\s*(?:(?:--\s*session\[(?P<session>[^\]]*)\]\S+|--\s*(?P<task_parent>\S+))\s*--\s*(?P<task_name>\S+))?"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$session}
userdata5={$task_parent}
userdata6={$task_name}
userdata7={normalize_date($date2)}

[0056 - VMware Vcenter - 6.0 - Drm activity]
event_type=event
precheck="Drm"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*opID=(?P<op_id>[^\]]*)\]\s\[Drm\]\s*(?P<sid>host-on|host-off|generating proposals|LogActiveCapacity):?\s*(?:LogHostDemand:\s(?P<hosts>.*?), TOTAL\s)?(?:(?P<cpu>cpu \d+)\s*(?P<memory>mem \d+))?"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$cpu}
userdata5={$memory}
userdata6={normalize_date($date2)}

[0057 - VMware Vcenter - 6.0 - no classname events]
event_type=event
#precheck=""
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>(?:HTTP server|\S+\s*(?!\w+=)\S+\s*))\s*(?:opID=(?P<op_id>[^\]\s]*))?\s*(?:opName=(?P<op_name>[^\]\s]*))?\s*(?:vmName=(?P<vm_name>[^\]\s]*))?\]\s(?P<msg>(?P<sid>Drmdump written|Closing Response|Retrieved trusted STS certificate|Authenticat(?:ing|ed) to LS (?:old API)?\s*for stubAdapter|initial service state request failed, disabling pings|Default resource used for (?:extension description|Solution Manager tab)|No message string to format|Vmacore::Http::UnimplementedRequestHandler|EventManagerProcessJobs|Failed to read request|Already authenticated to LS for stubAdapter|ClientAdapterBase::InvokeOnSoap|TaskLoop|InvtHostSyncLRO::StartWork|Local stats|InvokeWithOpId|Failed to read header on stream|SetDone|NotifyChange|Not persisting vFlash resource runtime info|Response from host|level|PBMCallback|VpxdInvtHost|Got request for vm screenshot|Successfully completed request for vm screenshot|VpxdInvtVm::ProcessVmChanges|Backtrace|Unexpected exception|_configInfo|_configSpec|StatsProfile|VpxdInvtVm::ProcessVmInfo|InvtSpecSyncLRO::StartWork|VpxdDatastore::ProcessChangeInfo)(?::\s*CN=(?P<cn>[^,]*),\sTP = (?P<TP>.*)|:\s*\[class\s*(?P<class>[^\]]*)\]|\. error=(?P<error>.*)|\s*processing in unexpected (?P<state>state: \d+)|:\s*(?P<filename>\S+)$|:\s*\((?P<data1>[^,]*),\s(?P<data2>[^\)]*)\).*|\s<.*?TCP.*?:(?P<src_port>\d+)'>,\s*<TCP.*?:(?P<dst_port>\d+)'>>.*|\s*(?P<host_id>host-\S+).*|.*))"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
src_port={$src_port}
dst_port={$dst_port}
filename={$filename}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$cn}
userdata5={$TP}
userdata6={$class}
userdata7={$error}
userdata8={$data1}
userdata9={$host_id}

[0058 - VMware Vcenter - 6.0 - no classname events]
event_type=event
#precheck=""
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>(?:HTTP server|\S+\s*(?!\w+=)\S+\s*))\s*(?:opID=(?P<op_id>[^\]\s]*))?\s*(?:opName=(?P<op_name>[^\]\s]*))?\s*(?:vmName=(?P<vm_name>[^\]\s]*))?\]\s(?P<msg>(?P<sid>Method|Unexpected error reading SOAP request)(?:\s*(?P<methodName>[^\s]+)\s*threw undeclared fault of type\s*(?P<type>[^\s]+)|:\s*class\s*(?P<class>[^\(]+)\((?P<info>[^\)]+)\)))"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$op_name}
userdata5={$vm_name}
userdata6={$info}
userdata7={$methodName}
userdata8={$type}
userdata9={$class}

[0059 - VCenter 6.0 User authenticated]
event_type=event
precheck="[Auth]"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*(?:opID=(?P<op_id>[^\]]*))?\]\s*\[Auth]:\s*User\s*(?P<domain>[^\\]+)\\(?P<username>\S+)"
plugin_sid=2
date={normalize_date($syslog_date)}
device={$device}
src_ip={$device}
username={$username}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$domain}
userdata5={normalize_date($date2)}

[0060 - VMware Vcenter - 6.0]
event_type=event
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*(?:opID=(?P<op_id>[^\s]*))?\]\s*\[(?:.*?::|)+(?P<sid>[^\]]*)\]\s*(?P<msg>the portgroup \[(?P<portgroup>[^\]]+)]\s*should not be on the host \[(?P<host_name>[^\]]+)]\s*|for VM (/\S+/)+(?P<vmx_file>[^\s]+)|.*?host\s*\[?(?P<host_id>[^\[\]\s]+)\]?\s*(?:failed with exception \[?(?P<exception>[^\[\]\s]+)\]|.*)|.*?VM id=(?P<vm_id>\S+))+"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
filename={$vmx_file}
userdata1={$severity}
userdata2={$sub}
userdata3={$host_name}
userdata4={$host_id}
userdata5={$op_id}
userdata6={$msg}
userdata7={$exception}
userdata8={$vm_id}
userdata9={normalize_date($date2)}

[0061 - VMware Vcenter - 6.0 - class events]
event_type=event
#precheck=""
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*(?:opID=(?P<op_id>[^\s]*))?\]\s\[(?:.*?::|)+(?P<sid>[^\]]*)\]\s*(?P<msg>(?:Solution|GetUserInfo)\s*(?:\(.*?\\)?\(?(?P<username>[^@,\s]*).*|Cache\sfor\s(?P<cache>\S+)\sis\s(?P<status>obsolete|Successfully retrieved).*|Creating .*?from\s(?P<filename>\S+)|Not persisting the serial port.*|Try to connect to (?P<endpoint>.*?)endpoint|Got exception\s*from\s(?P<function>\S+)\s*class\s*(?P<class>[^\(]*)\s*\((?P<error>[^\)]*)|Before lock (?P<compatibility_list>.*)|Missed 2 heartbeats for host (?P<host>\S+)|IO exception.*|Successfully logged|Maybe SSO.*?Exception:\s(?P<exception>.*)|Current time:.*|$|[^-][^-].*)?"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
username={$username}
filename={$filename}
userdata1={$severity}
userdata2={$sub}
userdata3={$host}
userdata4={$cache}
userdata5={$status}
userdata6={$endpoint}
userdata7={$class}
userdata8={$error}
userdata9={$exception}

[0062 - VMware Vcenter - 6.0 - File event]
event_type=event
precheck="FILE"
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>(?:HTTP server|\S+))\s*(?:opID=(?P<op_id>[^\]]*))?\]\s*\((?P<level>[^)]+)\)\s*FILE:\s*(?P<sid>[^:]+):\s*(?P<error>Non-retriable error encountered)\s*\((?P<filename>[^\)]+)\):\s*(?P<msg>.*)"
date={normalize_date($syslog_date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
filename={$filename}
userdata1={$severity}
userdata2={$sub}
userdata3={$op_id}
userdata4={$level}
userdata5={$error}
userdata6={$msg}

[0063 - VMware Vcenter - vmafdd events]
event_type=event
precheck="vmafdd"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\svmafdd\s(?P<username>[^@]+)@(?P<domain>[^:]+):\s(?:User\s(?P<user>\S+)\s|\[[^]]+\]\s)?(?P<sid>requested\s(?P<requested>\S+)|Adding\scert|VmAfSrvGetDomainName\ssucceeded|Added\scert\sto\sVECS\sDB|VmAfd\S+\sfailed|[^:\s]+:)\s*(?:operation\son\sStore\swith\sID:\s*(?P<id>\d*)|(?P<message>successfully\swritten\sfile|[^:\.]+:)\s(?P<filename>\S+)|:?\.?(?P<msg>.*))?"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
filename={$filename}
username={$user}
userdata1={$username}
userdata2={$domain}
userdata3={$id}
userdata4={$message}
userdata5={$msg}

[0064 - VMware Vcenter - su events]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\ssu\s*-?\s*\([^)]+\)\s(?P<dst_user>\S+)\s*on\s*(?P<src_user>\S+)"
date={normalize_date($date)}
device={$device}
plugin_sid=212
src_ip={$device}
username={$dst_user}
userdata1={$src_user}

[0065 - VMware Vcenter - CMD event]
event_type=event
precheck="CMD"
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<device>\S+)\s\[[^]]+\]\s\((?P<user>[^)]+)\)\s+CMD.*"
date={normalize_date($date)}
plugin_sid=67
device={$device}
src_ip={$device}
username={$user}

[0066 - VMware Vcenter]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s+(?:rsyslogd\s\[origin\ssoftware.*?x-info="(?P<url>[^"]+))?[^]]+\]\s(?P<code>\d+)?\s*-?\s*(?:(?!type)(?P<sid>rsyslogd was HUPed|can't get program name|can't read sid|password aging information displayed|utils.format.string_to_doc\sexception|NET:\s(?:Un)?[rR]egistered\sprotocol\sfamily|[^:.,]+[\:,\.]))(?::\smsg:\s(?P<msg>[^.]+).*|(?:\s|\sfrom\s)(?P<file>/\S+)|\s(?P<message>auditd.*)|\s-\saccount=(?P<user>[^,]+))?"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
username={$user}
filename={$file}
userdata1={$code}
userdata2={$msg}
userdata3={$message}
userdata4={$url}

[0067 - VMware Vcenter]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<device>\S+)\s+(?:audispd|stunnel\s[^]]+\]:)\s(?P<sid>\S+\s(?:plugin\s)?initialized|Threading|Compiled/running\swith\sOpenSSL|stunnel|Reading\sconfiguration|.*)(?:\sfrom\sfile\s(?P<file>\S+)|:?(?P<msg>.*))?"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$device}
src_ip={$device}
filename={$file}
userdata1={$msg}

[0068 - VMware Vcenter - 6.0 - vpxd-profiler]
event_type=event
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s*(?P<process>\S+)\s*-->\s*/(?:(?!\w+=)[^/]+/)+(?:Id='(?P<session_id>[^']+)'|/?Username='(?P<domain>[^\\]+)\\(?P<username>[^']+)'|/?ClientIP='(?P<client_ip>[^']+)'|/?MoHost='(?P<mo_host>[^']+)'|/?Name='(?P<name>[^']+)'|/?Type='(?P<type>[^']+)'|/?Nmspc='(?P<nmspc>[^']+)'|/?Item='(?P<item>[^']+)'|/?Actv='(?P<actv>[^']+)'|.*)+"
date={normalize_date($syslog_date)}
plugin_sid=100002
device={$device}
src_ip={$client_ip}
username={$username}
userdata1={$domain}
userdata2={$session_id}
userdata3={$mo_host}
userdata4={$name}
userdata5={$type}
userdata6={$nmspc}
userdata7={$item}
userdata8={$actv}

##########################
#   GENERIC RULES        #
##########################

[9995 - VMware Vcenter - 6.0 - vpxd generic rule]
event_type=event
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*(?P<severity>warning|info|error)\s*\w+\[\d+\]\s*\[\S+\s*sub=(?P<sub>\S+)\s*(?:opID=(?P<op_id>[^\]]*))?\].*"
date={normalize_date($syslog_date)}
plugin_sid=100003
device={$device}
src_ip={$device}
userdata1={$sub}
userdata2={$op_id}
userdata3={$severity}
userdata4={normalize_date($syslog_date)}

[9996 - VMware Vcenter - Generic-1]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source>\S+)\s+(?P<service>sfcb-vmware_raw|\w+)(\[\d+\])?:\s+(?P<msg>\w.*\w+)\.?$"
date={normalize_date($date)}
plugin_sid=1999999999
device={$source}
src_ip={$source}
userdata1={$service}
userdata2={$msg}

[9997 - VCenter 6.0 Generic-rule]
event_type=event
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source_ip>\S+)\s+(?P<service_name>su|vmcad|vmafdd|vmdird)\s+\-\s+\S+\:.*?\s+(?P<sid>[^\:|\[|\]]*)\:\s+(?P<info>.*)"
date={normalize_date($date)}
plugin_sid={translate($sid)}
device={$source_ip}
src_ip={$source_ip}
userdata1={$info}
userdata2={$service_name}

[9998 - Vcenter 6.0 Super-generic]
event_type=event
regexp="(?P<syslog_date>\w+\s*\d+\s*\d+:\d+:\d+)\s*(?P<device>\S+)\s+(?:\S+\s+)?(?P<date2>\d+-\d+-\d+T\d+:\s*\d+:\d+\.\S+)\s*?(?P<service_name>su|vmcad|audispd|chage|vmafdd|vmdird|rsyslogd|auditd|vpxd-profiler|vpxd)(?:\S+)?\s*\-?\s*(?P<info>.*)"
date={normalize_date($syslog_date)}
plugin_sid={translate($service_name)}
device={$device}
src_ip={$device}
userdata1={$info}
userdata2={normalize_date($date2)}

[9999 - VMware Vcenter - ##GENERIC-RULE##]
event_type=event
#regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<sip>\d+.\d+.\d+.\d+)\s+(?P<service>\w+)(\[\d+\])?:\s+(?P<msg>.*)\n"
regexp="(?P<date>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<source>\S+)\s+(?P<service>[^H]\w+)(\[\d+\])?:\s+(?P<msg>.*)\n"
date={normalize_date($date)}
plugin_sid=1999999999
device={$source}
src_ip={$source}
userdata1={$service}
userdata2={$msg}

