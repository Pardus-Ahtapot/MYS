# Alienvault plugin
# Author: Alienvault Team at devel@alienvault.com
# Plugin postgresql id:1851 version: 0.0.1
# Last modification: 2017-03-08	14:00
#
# Plugin Selection Info:
# PostgreSQL GDG:postgresql:-
#
# END-HEADER
#
# Description:
#
#
# 

[DEFAULT]
plugin_id=1851


[config]
type=detector
enable=yes

source=log
location=/var/log/postgresql.log
create_file=true

process=
start=no
stop=no
startup=
shutdown=


[translation]
CREATE = 4
ALTER = 4
DROP = 4
TRUNCATE = 4
COMMENT = 4
RENAME = 4

GRANT = 5
REVOKE = 5

COMMIT = 6
ROLLBACK = 6
SAVEPOINT = 6
SET = 6

SELECT = 7
INSERT = 7
UPDATE = 7
DELETE = 7
MERGE = 7
CALL = 7
EXPLAIN = 7
LOCK TABLE = 7
DESCRIBE = 7
DESC = 7

DISCONNECT = 8

CONNECT = 9

Access Denied = 10
Access denied = 10
access Denied = 10
access denied = 10

#   Rule 9998
duration = 20000000
parameters = 20000000
checkpoint starting = 20000000
checkpoint complete = 20000000
#   Default
_DEFAULT_=20000000


#########################
#         RULES         #
#########################

[0001 - Postgresql - MultiLine:Connection]
event_type=event
precheck="connection received"
regexp="(?P<date>\d+-\d+-\d+\s+\d+:\d+:\d+)\s+[^:]+:(?P<src_ip>[^(]+)\((?P<src_port>\d+)\):\[unknown\]@\[unknown\]:\[(?P<pid>\d+)\]:LOG:\s+connection received.*\n\d+-\d+-\d+\s+\d+:\d+:\d+(?:[^:]+:){5}\s+connection authorized:\s+user=(?P<username>\S+)\s+database=(?P<database>\S+)\s+(?P<ssl>[^(]+)\(protocol=(?P<protocol>[^,]+), cipher=(?P<cipher>[^,]+),\s+compression=(?P<compression>on|off)\)"
date={normalize_date($date)}
plugin_sid=1
src_ip={$src_ip}
src_port={$src_port}
username={$username}
protocol={$protocol}
userdata1={$database}
userdata2={$pid}
userdata3={$ssl}
userdata4={$cipher}
userdata5={$compression}

[0002 - Postgresql - SingleLine:Disconnection]
event_type=event
precheck="disconnection"
regexp="(?P<date>\d+-\d+-\d+\s+\d+:\d+:\d+)\s+[^:]+:(?P<src_ip>[^(]+)\((?P<src_port>\d+)\):[^@]+@[^:]+:\[(?P<pid>\d+)\]:LOG:\s+disconnection:\s+session time:\s+(?P<session_time>\S+)\s+user=(?P<username>\S+)\s+database=(?P<database>\S+)"
date={normalize_date($date)}
plugin_sid=2
src_ip={$src_ip}
src_port={$src_port}
username={$username}
userdata1={$database}
userdata2={$pid}
userdata3={$session_time}


#   Generic:
[9998 - Postgresql - Generic event]
event_type=event
#precheck=
#regexp="(?P<date>\d+-\d+-\d+\s+\d+:\d+:\d+)\s+[^:]+:(?:(?P<src_ip>[^(]+)\((?P<src_port>\d+)\))?:(?P<username>[^@]*?)@(?P<database>[^:]*?):\[(?P<pid>\d+)\]:(?:LOG|DETAIL):\s+(?P<sid>duration|execute|parameters|checkpoint (?:complete|starting)|statement)(?:\s+(?P<statement_name>\S+):)?"
regexp="\w+\s+\d+\s\d+:\d+:\d+\s(?P<device>.*?)\s(?P<sensor>.*?)\s(?P<date>\d+-\d+-\d+\s+\d+:\d+:\d+)\s+[^:]+(?:LOG|DETAIL):\s+(?P<sid>duration|execute|parameters|checkpoint).*?(?:\s+(?P<statement_name>\S+):)?\s(?P<cat>\S+).*$"
date={normalize_date($date)}
plugin_sid={translate($cat)}
userdata1=OPERATION: {$cat}
userdata2=STATEMENT NAME: {$statement_name}

[9999 - Postgresql - Query Catcher]
event_type=event
#precheck=
regexp="^\s+.*$"
plugin_sid=20000000
