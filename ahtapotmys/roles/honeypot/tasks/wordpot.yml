---
- name: installing wordpot honeypot
  sudo: yes
  shell: lxc-attach -n wordpot -- /bin/bash -c "export DEBIAN_FRONTEND=noninteractive; apt-get -yq update; apt-get -yq install wordpot wget sudo"
  when: item.type == "wordpot"
  with_items: containers[inventory_hostname]

- name: registering wordpot honeypot
  sudo: yes
  shell: |
    lxc-attach -n wordpot -- /bin/bash -c "if [[ ! -f {{wordpot_conf.register_check_file}} ]]; then
                                            /usr/share/wordpot/register_wordpot_to_mhn.sh {{mhn_url}} {{mhn_deploy_key}} {{wordpot_conf.listen_ip}} {{wordpot_conf.listen_port}} &&
                                            touch {{wordpot_conf.register_check_file}};
                                           fi"
  when: item.type == "wordpot"
  with_items: containers[inventory_hostname]

- name: registering wordpot honeypot with force
  sudo: yes
  shell: lxc-attach -n wordpot -- /usr/share/wordpot/register_wordpot_to_mhn.sh {{mhn_url}} {{mhn_deploy_key}} {{wordpot_conf.listen_ip}} {{wordpot_conf.listen_port}};
  when: item.type == "wordpot" and item.force_register == true
  with_items: containers[inventory_hostname]

- name: set up wordpot host
  sudo: yes
  lineinfile:
    dest: "/var/lib/lxc/{{item.type}}/rootfs/usr/share/wordpot/wordpot.conf"
    regexp: '^HOST.*'
    line: "HOST = '{{wordpot_conf.listen_ip}}'"
    backup: yes
  when: item.type == "wordpot" and item.force_register != true
  with_items: containers[inventory_hostname]

- name: set up wordpot port
  sudo: yes
  lineinfile:
    dest: "/var/lib/lxc/{{item.type}}/rootfs/usr/share/wordpot/wordpot.conf"
    regexp: '^PORT.*'
    line: "PORT = '{{wordpot_conf.listen_port}}'"
    backup: yes
  when: item.type == "wordpot" and item.force_register != true
  with_items: containers[inventory_hostname]

- name: restarting wordpot honeypot
  sudo: yes
  shell: lxc-attach -n wordpot -- systemctl restart wordpot
  when: item.type == "wordpot"
  with_items: containers[inventory_hostname]
