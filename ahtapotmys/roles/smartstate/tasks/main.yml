---
- name: Install ansible
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - ansible
    - git
  sudo: yes
  tags: smartstate

- name: Create log directory
  file:
    path: "{{ smartstate.log_file | dirname }}"
    state: directory
    owner: ahtapotops
    group: ahtapotops
    mode: 0755
  sudo: yes
  tags: smartstate

- name: Create log directory on local
  file:
    path: "{{ smartstate.log_file | dirname }}"
    state: directory
    owner: ahtapotops
    group: ahtapotops
    mode: 0755
  delegate_to: localhost
  run_once: true
  sudo: yes
  tags: smartstate

- name: Create bin directory
  file:
    path: "{{ smartstate.script_file | dirname }}"
    state: directory
    owner: ahtapotops
    group: ahtapotops
    mode: 0755
  sudo: yes
  tags: smartstate

- name: Create bin directory on local
  file:
    path: "{{ smartstate.script_file | dirname }}"
    state: directory
    owner: ahtapotops
    group: ahtapotops
    mode: 0755
  delegate_to: localhost
  run_once: true
  sudo: yes
  tags: smartstate


- name: Deploy smartstate script
  template:
    src: "smartstate.py.j2"
    dest: "{{smartstate.script_file}}"
    owner: "root"
    mode: "755"
  sudo: yes
  tags: smartstate

- name: Deploy smartstate script on local
  template:
    src: "smartstate.py.j2"
    dest: "{{smartstate.script_file}}"
    owner: "root"
    mode: "755"
  delegate_to: localhost
  run_once: true
  sudo: yes
  tags: smartstate

- name: Deploy ssh public key to gitlab
  uri:
    url: "{{smartstate.gitlab_api_url}}/user/keys"
    body_format: json
    method: POST
    headers:
      PRIVATE-TOKEN: "{{smartstate.gitlab_access_token}}"
    body:
      key: "{{smartstate.gitlab_ssh_public_key}}"
      title: "{{smartstate.gitlab_ssh_key_title}}"
    status_code:
      - 201
      - 400
  register: response
  changed_when: response.status == 201
  delegate_to: "{{smartstate.gitlab_host}}"
  run_once: true
  sudo: yes
  tags: smartstate

- name: Deploy ssh private key
  template:
    src: "gitlab_private_key.j2"
    dest: "{{smartstate.gitlab_ssh_private_key_file}}"
    owner: "ahtapotops"
    mode: "600"
  sudo: yes
  tags: smartstate

- name: Deploy ssh private key on local
  template:
    src: "gitlab_private_key.j2"
    dest: "{{smartstate.gitlab_ssh_private_key_file}}"
    owner: "ahtapotops"
    mode: "600"
  delegate_to: localhost
  run_once: true
  sudo: yes
  tags: smartstate

- name: Set pull cron configuration
  cron:
    name: "pull command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.host_pull.cron_minute}}"
    hour: "{{smartstate.host_pull.cron_hour}}"
    day: "{{smartstate.host_pull.cron_day}}"
    job: "{{smartstate.script_file}} --pull --host {{inventory_hostname}} --delay"
    state: present
    user: ahtapotops
  when: smartstate.not_pull_hosts is not defined or inventory_hostname not in smartstate.not_pull_hosts
  notify: reload cron
  sudo: yes
  tags: smartstate

- name: Remove pull cron configuration for exception hosts
  cron:
    name: "pull command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    job: "{{smartstate.script_file}} --pull --host {{inventory_hostname}} --delay"
    state: absent
    user: ahtapotops
  when: smartstate.not_pull_hosts is defined and inventory_hostname in smartstate.not_pull_hosts
  notify: reload cron
  sudo: yes
  tags: smartstate


- name: Set smart pull cron configuration
  cron:
    name: "smart pull command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.host_smartpull.cron_minute}}"
    hour: "{{smartstate.host_smartpull.cron_hour}}"
    day: "{{smartstate.host_smartpull.cron_day}}"
    job: "{{smartstate.script_file}} --smart-pull --host {{inventory_hostname}} --delay"
    state: present
    user: ahtapotops
  when: smartstate.not_smartpull_hosts is not defined or inventory_hostname not in smartstate.not_smartpull_hosts
  notify: reload cron
  sudo: yes
  tags: smartstate

- name: Remove smart pull cron configuration for exception hosts
  cron:
    name: "smart pull command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    job: "{{smartstate.script_file}} --smart-pull --host {{inventory_hostname}} --delay"
    state: absent
    user: ahtapotops
  when: smartstate.not_smartpull_hosts is defined and inventory_hostname in smartstate.not_smartpull_hosts
  notify: reload cron
  sudo: yes
  tags: smartstate

- name: Set trigger cron configuration on local
  cron:
    name: "trigger command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.mys_trigger.cron_minute}}"
    hour: "{{smartstate.mys_trigger.cron_hour}}"
    day: "{{smartstate.mys_trigger.cron_day}}"
    job: "{{smartstate.script_file}} --trigger"
    state: present
    user: ahtapotops
  delegate_to: localhost
  run_once: true
  notify: reload local cron
  sudo: yes
  tags: smartstate

- name: Set smart trigger cron configuration on local
  cron:
    name: "smart trigger command for {{inventory_hostname}}"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.mys_smarttrigger.cron_minute}}"
    hour: "{{smartstate.mys_smarttrigger.cron_hour}}"
    day: "{{smartstate.mys_smarttrigger.cron_day}}"
    job: "{{smartstate.script_file}} --smart-trigger"
    state: present
    user: ahtapotops
  delegate_to: localhost
  run_once: true
  notify: reload local cron
  sudo: yes
  tags: smartstate

- name: Set push cron configuration on local
  cron:
    name: "smartstate push comand"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.mys_push.cron_minute}}"
    hour: "{{smartstate.mys_push.cron_hour}}"
    day: "{{smartstate.mys_push.cron_day}}"
    job: "{{smartstate.script_file}} --push "
    state: present
    user: ahtapotops
  delegate_to: localhost
  run_once: true
  notify: reload local cron
  sudo: yes
  tags: smartstate

- name: Set smart push cron configuration on local
  cron:
    name: "smartstate smart push command"
    cron_file: "{{smartstate.cron_file}}"
    minute: "{{smartstate.mys_smartpush.cron_minute}}"
    hour: "{{smartstate.mys_smartpush.cron_hour}}"
    day: "{{smartstate.mys_smartpush.cron_day}}"
    job: "{{smartstate.script_file}} --smart-push "
    state: present
    user: ahtapotops
  delegate_to: localhost
  run_once: true
  notify: reload local cron
  sudo: yes
  tags: smartstate

- name: Trigger task control variable
  shell: /bin/true
  register: skip_trigger
  delegate_to: localhost
  run_once: true
  tags: smartstate

- name: Run smartstate trigger
  shell: "(({{smartstate.script_file}} --pull --host {{inventory_hostname}} 1>/dev/null 2>&1 ) & )"
  when: skip_trigger is not defined and (smartstate.not_trigger_hosts is not defined or inventory_hostname not in smartstate.not_trigger_hosts)
  tags: smartstate,trigger

- name: Run smartstate smart trigger
  shell: "(({{smartstate.script_file}} --smart-pull --host {{inventory_hostname}} 1>/dev/null 2>&1 ) & )"
  when: skip_trigger is not defined and (smartstate.not_smarttrigger_hosts is not defined or inventory_hostname not in smartstate.not_smarttrigger_hosts)
  tags: smartstate,smarttrigger



