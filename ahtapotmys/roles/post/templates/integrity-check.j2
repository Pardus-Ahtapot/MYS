#!/bin/bash

DPKG_QUERY="/usr/bin/dpkg-query"
CAT="/bin/cat"
AWK="/usr/bin/awk"
SORT="/usr/bin/sort"
DIFF="/usr/bin/diff"
APT="/usr/bin/apt"
DELUSER="/usr/sbin/deluser"
DELGROUP="/usr/sbin/delgroup"
SHA256SUM="/usr/bin/sha256sum"
CUT="/usr/bin/cut"
DEBSUMS="/usr/bin/debsums"
RM="/bin/rm"
GIT="/usr/bin/git"
GREP="/bin/grep"

RET=0
GIT_PATH="/sb"

$RM -rf {{ integrity['files']['remote']['path'] }}/${GIT_PATH}

runuser -l ahtapotops -c "GIT_SSL_NO_VERIFY=true $GIT clone {{ integrity['git']['repo'] }} --branch {{ inventory_hostname }} {{ integrity['files']['remote']['path'] }}${GIT_PATH} --depth 1"

RETVAL=$?

if [ $RETVAL -ne 0 ]; then
    GIT_PATH=""
fi

PACKAGES_FILE="{{ integrity['files']['remote']['path'] }}${GIT_PATH}/packages"
TEMP_PACKAGES_FILE="{{ integrity['files']['remote']['path'] }}/packages.temp"
WHITELIST_PACKAGES_FILE="{{ integrity['files']['remote']['path'] }}/packages.whitelist"
USERS_FILE="{{ integrity['files']['remote']['path'] }}${GIT_PATH}/users"
TEMP_USERS_FILE="{{ integrity['files']['remote']['path'] }}/users.temp"
WHITELIST_USERS_FILE="{{ integrity['files']['remote']['path'] }}/users.whitelist"
GROUPS_FILE="{{ integrity['files']['remote']['path'] }}${GIT_PATH}/groups"
TEMP_GROUPS_FILE="{{ integrity['files']['remote']['path'] }}/groups.temp"
WHITELIST_GROUPS_FILE="{{ integrity['files']['remote']['path'] }}/groups.whitelist"
CONFS_FILE="{{ integrity['files']['remote']['path'] }}${GIT_PATH}/confs"
DEBSUMS_FILE="{{ integrity['files']['remote']['path'] }}${GIT_PATH}/debsums"

$DPKG_QUERY -f '${binary:Package}\n' -W > $TEMP_PACKAGES_FILE
$CAT /etc/passwd | $AWK -F: '{print $1}' | $SORT -sf > $TEMP_USERS_FILE
$CAT /etc/group | $AWK -F: '{print $1}' | $SORT -sf > $TEMP_GROUPS_FILE

PACKAGES_DIFF=$($DIFF --changed-group-format='%>' --unchanged-group-format='' $PACKAGES_FILE $TEMP_PACKAGES_FILE)
USERS_DIFF=$($DIFF --changed-group-format='%>' --unchanged-group-format='' $USERS_FILE $TEMP_USERS_FILE)
GROUPS_DIFF=$($DIFF --changed-group-format='%>' --unchanged-group-format='' $GROUPS_FILE $TEMP_GROUPS_FILE)

function send_log {
    logger -t "integrity-check" "$1|$2"
}

if [[ ! -z "$PACKAGES_DIFF" ]]; then
    RET=1
    for package in $PACKAGES_DIFF; do
        $($GREP -Fxq "$package" $WHITELIST_PACKAGES_FILE)
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
            send_log "PACKAGE" "$package"
            if [[ "$1" == "--fix" ]]; then
                $APT purge $package -y &> /dev/null
            fi
        fi
    done
    if [[ "$1" == "--fix" ]]; then
        $APT autoremove -y &> /dev/null
    fi
fi

if [[ ! -z "$USERS_DIFF" ]]; then
    RET=1
    for user in $USERS_DIFF; do
        $($GREP -Fxq "$user" $WHITELIST_USERS_FILE)
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
            send_log "USER" "$user"
            if [[ "$1" == "--fix" ]]; then
                $DELUSER -q $user &> /dev/null
            fi
        fi
    done
fi

if [[ ! -z "$GROUPS_DIFF" ]]; then
    RET=1
    for group in $GROUPS_DIFF; do
        $($GREP -Fxq "$group" $WHITELIST_GROUPS_FILE)
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
            send_log "GROUP" "$group"
            if [[ "$1" == "--fix" ]]; then
                $DELGROUP -q $group &> /dev/null
            fi
        fi
    done
fi

while IFS= read -r var; do
    old_checksum=$(echo $var | $CUT -f1 -d " ")
    path=$(echo $var | $CUT -f2 -d " ")
    new_checksum=$($SHA256SUM $path | $CUT -f1 -d " ")
    if [[ "$new_checksum" != "$old_checksum" ]]; then
        RET=1
        send_log "CONF" "$path"
    fi
done < "$CONFS_FILE"

DEBSUM_CORRUPTED=false
while IFS= read -r var; do
    old_checksum=$(echo $var | $CUT -f1 -d " ")
    path=$(echo $var | $CUT -f2 -d " ")
    new_checksum=$($SHA256SUM $path | $CUT -f1 -d " ")
    if [[ "$new_checksum" != "$old_checksum" ]]; then
        DEBSUM_CORRUPTED=true
        send_log "MD5SUMS" "$path"
        break
    fi
done < "$DEBSUMS_FILE"

if ! $DEBSUM_CORRUPTED ; then
    RESULT=$($DEBSUMS -c)
    RETVAL=$?
    if [ $RETVAL -eq 2 ]; then
        for line in $RESULT; do
            send_log "DEBSUMS" "$line"
        done
    fi
fi

exit $RET
