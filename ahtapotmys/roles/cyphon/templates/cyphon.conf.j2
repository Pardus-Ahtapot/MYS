#Cyphon Logstash

#Load Moudules
module(load="imuxsock")
module(load="imklog")
module(load="imrelp")
module(load="imfile" mode="inotify")
module(load="imudp" threads="4")
module(load="omrelp")

main_queue(
   queue.size="100000000"
   queue.workerthreads="4"
)

#Json Template
template(name="logstash-json-template" type="list") {
        constant(value="{")
        constant(value="\"@timestamp\":\"") property(name="timereported" dateFormat="rfc3339")
        constant(value="\",\"@version\":\"1")
        constant(value="\",\"message\":\"") property(name="msg" format="json")
        constant(value="\",\"sysloghost\":\"") property(name="hostname")
        constant(value="\",\"severity\":\"") property(name="syslogseverity-text")
        constant(value="\",\"facility\":\"") property(name="syslogfacility-text")
        constant(value="\",\"programname\":\"") property(name="programname")
        constant(value="\",\"procid\":\"") property(name="procid")
        constant(value="\"}\n")
}

#Listen SSHPORT with relp
input(type="imrelp"
   port="SSHPORT"
   ruleset="LogsForCyphon"
   tls="on"
   tls.caCert="/etc/ssl/certs/rootCA.pem"
   tls.myCert="/etc/ssl/certs/CYPHON_FQDN.crt"
   tls.myPrivKey="/etc/ssl/private/CYPHON_FQDN.key"
   tls.authMode="name"
   tls.permittedpeer=["ahtapot.org.tr"]
)

#Output Log to Logstash with Json Template
ruleset(name="LogsForCyphon") {
    action(name="CyphonToLogstash"
        type="omfwd"
        target="127.0.0.1"
        port="10514"
        protocol="udp"
        queue.filename="fwd_CyphonToLogstash"
        queue.saveonshutdown="on"
        queue.type="LinkedList"
        queue.maxfilesize="100m"
        queue.size="1000000"
        action.resumeretrycount="-1"
        template="logstash-json-template")
    )
   stop
}

