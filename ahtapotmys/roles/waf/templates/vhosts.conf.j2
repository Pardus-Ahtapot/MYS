{% if item.value.waf_force_https == "On" %}
<VirtualHost *:80>
   ServerName {{ item.value.waf_hostname }}
   {% for server_alias in item.value.server_aliases %}
   ServerAlias  {{ server_alias }}
   {% endfor %}
   Redirect / https://{{ item.value.waf_hostname }}
</VirtualHost>
{% endif %}

<VirtualHost {{ item.value.listen_ip }}:{{item.value.listen_port}}>
        ServerName  {{item.value.waf_hostname}}
{% for server_alias in item.value.server_aliases %}
        ServerAlias  {{server_alias}}
{% endfor %}

        HttpProtocolOptions {{item.value.http_protocol_options}}
        SecRuleEngine {{item.value.waf_status}}
	ProxyRequests Off

{% if item.value.ssl_engine == "on" %}
	SSLEngine on
	{% if item.value.ssl_disable_protocols|length > 0 %}
	SSLProtocol {{item.value.ssl_disable_protocols}}
	{% endif %}
        {% if item.value.ssl_honor_cipher_order|length > 0 %}
	SSLHonorCipherOrder {{item.value.ssl_honor_cipher_order}}
        {% endif %}
        {% if item.value.ssl_compression|length > 0 %}
	SSLCompression {{item.value.ssl_compression}}
        {% endif %}
        {% if item.value.ssl_cipher_suite|length > 0 %}
	SSLCipherSuite '{{item.value.ssl_cipher_suite}}'
        {% endif %}

	SSLCertificateFile      /etc/apache2/ssl/certs/{{item.value.waf_hostname}}.crt
	SSLCertificateKeyFile   /etc/apache2/ssl/key/{{item.value.waf_hostname}}.key

	{% if item.value.ssl_stapling is defined and item.value.ssl_stapling == "on" %}
	SSLUseStapling on
	SSLStaplingReturnResponderErrors off
	SSLStaplingResponderTimeout 5
	{% else %}
        SSLUseStapling off
	{% endif %}


{% endif %}

	Include /etc/wafkurallar/OWASP.conf
	Include /etc/wafkurallar/OWASP/*.conf

	SecDebugLogLevel {{item.value.waf_debug_level}}

        DocumentRoot /var/www/html
        ErrorDocument 403 /waf_error.html
        ErrorDocument 500 /waf_error.html
        ErrorDocument 503 /waf_error.html

        ProxyPass /waf_error.html !

{% if item.value.waf_disabled_rules|length > 0 %}
    {% for rule_id in item.value.waf_disabled_rules %} 
	SecRuleRemoveById {{rule_id}}
    {% endfor %}
{% endif %}
{% raw %}{% endraw %}
{% if item.value.waf_disabled_tags|length > 0 %}
    {% for rule_tag in item.value.waf_disabled_tags %}
        SecRuleRemoveByTag {{rule_tag}}
    {% endfor %}
{% endif %}

{% if item.value.restrict_by_ip == "on" %}
{% for keyx,valx in item.value.restriction_list.iteritems() %}
    <Location {{valx.path}}>
    {% for ip_exception in valx.allowed_ips %}
      Require ip {{ip_exception }}
    {% endfor %}
    </Location>
{% endfor %}
{% endif %}

{% if item.value.cache_control_status == "On" %}
	<FilesMatch "\.({{item.value.cache_control_file_ext}})$">
		Header set Cache-Control "max-age={{ item.value.cache_control_max_age }}, public"
	</FilesMatch>
{% endif %}


{% if item.value.proxy_vhost == "on" %}
	{% if item.value.proxy_sticky_sessions == "On" %}
		Header add Set-Cookie "{% if item.value.proxy_sticky_session_name == "auto" %}ROUTEID{% else %}{{item.value.proxy_sticky_session_name}}{% endif %}=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
	{% endif %}

	{% if item.value.proxy_load_balance_pool_name|length > 0  %}
		{% if item.value.proxy_load_balance_members|length > 0  %}
		<Proxy balancer://{{item.value.proxy_load_balance_pool_name}}>
			{% set loadbalancer_active = "active" %}
			{% for proxy_member in item.value.proxy_load_balance_members %}
                        BalancerMember {{proxy_member}}{% if item.value.proxy_load_balance_health_check == "on"  %} hcmethod=TCP hcinterval={{item.value.proxy_load_balance_health_check_int}} hcpasses={{item.value.proxy_load_balance_health_check_pass}} hcfails={{item.value.proxy_load_balance_health_check_fail}}{% endif %}{% if item.value.proxy_sticky_sessions == "On" %} route=backend-{{ loop.index }} enablereuse=On{% endif %}
{% raw %}{% endraw %}

			{% endfor %}
{% if item.value.proxy_load_balance_method|length > 0  %}
			ProxySet lbmethod={{item.value.proxy_load_balance_method}}
{% raw %}{% endraw %}
	{% if item.value.proxy_sticky_sessions == "On" %}
			ProxySet stickysession={% if item.value.proxy_sticky_session_name == "auto" %}ROUTEID{% else %}{{item.value.proxy_sticky_session_name}}{% endif %}
{% raw %}{% endraw %}
	{% endif %}
{% endif %}
{% raw %}{% endraw %}
{% if item.value.waf_force_https == "On" %}
	Header edit Location "(^http[s]?://)([a-zA-Z0-9\.\-]+)(:\d+)?/" "/"
{% raw %}{% endraw %}
{% endif %}

		</Proxy>
		{% endif %}
	{% endif %}

	ProxyPreserveHost {{item.value.preserve_host}}
	RemoteIPHeader {{item.value.remote_ip_header}}
	ProxyPassReverseCookiePath {{item.value.reverse_cookie_path}}
	ProxyPassReverseCookieDomain {{item.value.reverse_cookie_domain}}
	SSLProxyEngine {{item.value.proxy_ssl}}
{% if item.value.proxy_ssl_verify == "Off"  %}
{% raw %}{% endraw %}
        SSLProxyVerify none
{% raw %}{% endraw %}
        SSLProxyCheckPeerCN off
{% raw %}{% endraw %}
        SSLProxyCheckPeerName off
{% raw %}{% endraw %}
        SSLProxyCheckPeerExpire off
{% raw %}{% endraw %}
{% endif %}
	
	{% if loadbalancer_active is defined %}
		ProxyPass "/" balancer://{{item.value.proxy_load_balance_pool_name}}/
	{% else %}
		ProxyPass {{item.value.proxy_pass}}
		ProxyPassReverse {{item.value.proxy_reverse_pass}}
	{% endif %}

{% endif %}

	Include /etc/apache2/whitelist.conf


{% if item.value.optimize_access_log == "On" %}
	SetEnvIf Request_URI "\.(jpg|xml|png|gif|ico|js|css|swf|js?.|css?.)$" DontLog
	CustomLog /var/log/ahtapot/waf/{{item.value.waf_hostname}}.access.log combined Env=!DontLog
{% endif %}

{% if item.value.optimize_access_log == "log" %}
        CustomLog /var/log/ahtapot/waf/{{item.value.waf_hostname}}.access.log combined
{% endif %}
{% if item.value.optimize_access_log == "nolog" %}
{% endif %}

	ErrorLog /var/log/ahtapot/waf/{{item.value.waf_hostname}}.error.log

</VirtualHost>

