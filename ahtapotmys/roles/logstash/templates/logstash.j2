## Bu dosya ansible tarafindan yonetilmektedir!
## Burada yapilan degisikliklerin uzerine yazilir!!
{{ ansible_managed }}

###############################
# Default settings for logstash
###############################

# Override Java location
JAVACMD={{ logstash['conf']['javacmd'] }}

# Set a home directory
LS_HOME={{ logstash['conf']['ls_home'] }}

# Arguments to pass to logstash agent
#LS_OPTS=""

# Arguments to pass to java
LS_HEAP_SIZE="{{ logstash['conf']['ls_heap_size'] }}"
#LS_JAVA_OPTS="-Djava.io.tmpdir=$HOME"

# pidfiles aren't used for upstart; this is for sysv users.
LS_PIDFILE={{ logstash['conf']['ls_pidfile'] }}

# user id to be invoked as; for upstart: edit /etc/init/logstash.conf
LS_USER={{ logstash['conf']['ls_user'] }}
LS_GROUP={{ logstash['conf']['ls_group'] }}

# logstash logging
LS_LOG_FILE={{ logstash['conf']['ls_log_file'] }}
#LS_USE_GC_LOGGING="true"
#LS_GC_LOG_FILE=/var/log/logstash/gc.log

# logstash configuration directory
LS_CONF_DIR={{ logstash['conf']['ls_conf_dir'] }}

# Open file limit; cannot be overridden in upstart
LS_OPEN_FILES={{ logstash['conf']['ls_open_files'] }}

# Nice level
LS_NICE={{ logstash['conf']['ls_nice'] }}

# If this is set to 1, then when `stop` is called, if the process has
# not exited within a reasonable time, SIGKILL will be sent next.
# The default behavior is to simply log a message "program stop failed; still running"
KILL_ON_STOP_TIMEOUT={{ logstash['conf']['kill_on_stop_timeout'] }}
